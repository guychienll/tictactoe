{"version":3,"sources":["components/Pregame.js","components/Gaming.js","components/ScoreBoard.js","components/Result.js","App.js","serviceWorker.js","index.js"],"names":["Box","styled","div","Item","props","index","items_contents","Pregame","map","item","key","Component","Gaming","this","handleClick","gameState","onClick","bind","BoardMiddle","BoardSide","BoardRole","turn","ScoreBoard","crossCount","circleCount","style","display","alignItems","Result","winner","Container","gaming","Button","button","theResultOfWin","resetGame","App","state","isGaming","steps","handleState","resultChecker","setState","prevState","newGameState","Object","assign","forEach","result","i","j","k","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7d1917a0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nexport const Box = styled.div`\n  width: 540px;\n  height: 540px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n`;\nconst Item = styled.div`\n  width: 160px;\n  height: 160px;\n  color: white;\n  font-size: 100px;\n  text-align: center;\n  line-height: 160px;\n  font-family: \"Roboto Condensed\";\n  font-weight: bold;\n  color: ${(props) => (props.index % 4 === 0 ? \"#ffffff\" : \"#ff6d70\")};\n  font-style: ${(props) => (props.index % 4 === 0 ? \"italic\" : \"normal\")};\n`;\nconst items_contents = [\"TIC\", \"◯\", \"✖\", \"✖\", \"TAC\", \"◯\", \"◯\", \"✖\", \"TOE\"];\nexport default class Pregame extends Component {\n  render() {\n    return (\n      <>\n        <Box>\n          {items_contents.map((item, index) => (\n            <Item key={index} index={index}>\n              {item}\n            </Item>\n          ))}\n        </Box>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Box } from \"./Pregame\";\nconst Item = styled.div`\n  width: 180px;\n  height: 180px;\n  box-sizing: border-box;\n  color: white;\n  font-size: 100px;\n  text-align: center;\n  line-height: 160px;\n  font-family: \"Roboto Condensed\";\n  font-weight: bold;\n  color: black;\n  border-color: #ed494c;\n  border-style: solid;\n  stroke-linecap: round;\n  cursor: pointer;\n  :hover {\n    box-shadow: 0 0 100px #ed494c;\n  }\n  border-width: ${(props) => {\n    switch (props.index) {\n      case 0:\n      case 2:\n      case 6:\n      case 8:\n        return \"0px\";\n      case 1:\n      case 7:\n        return \"0px 8px\";\n      case 3:\n      case 5:\n        return \"8px 0px\";\n      case 4:\n        return \"8px\";\n      default:\n        return \"8px solid #ed494c\";\n    }\n  }};\n`;\nexport default class Gaming extends Component {\n  render() {\n    const { handleClick, gameState } = this.props;\n    return (\n      <Box>\n        {gameState.map((item, index) => (\n          <Item\n            onClick={handleClick.bind(this, index)}\n            key={index}\n            index={index}\n          >\n            {item}\n          </Item>\n        ))}\n      </Box>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nconst BoardMiddle = styled.div`\n  width: 70px;\n  height: 71px;\n  background-color: black;\n  text-align: center;\n  line-height: 71px;\n  font-family: \"Roboto Condensed\";\n  font-weight: bold;\n  font-size: 20px;\n  color: #ffffff;\n  border-radius: 8px 8px 0 0;\n`;\nconst BoardSide = styled.div`\n  width: 175px;\n  height: 60px;\n  border: 4px solid black;\n  background-color: white;\n  color: black;\n  box-sizing: border-box;\n  text-align: center;\n  line-height: 56px;\n  font-size: 48px;\n  font-family: \"Roboto Condensed\";\n  font-weight: bold;\n`;\nconst BoardRole = styled.div`\n  width: 60px;\n  height: 60px;\n  box-sizing: border-box;\n  border: solid black;\n  border-width: ${(props) => {\n    switch (props.turn) {\n      case \"cross\":\n        return \"4px 0 4px 4px\";\n      case \"circle\":\n        return \"4px 4px 4px 0\";\n      default:\n        break;\n    }\n  }};\n  border-radius: ${(props) => {\n    switch (props.turn) {\n      case \"cross\":\n        return \"8px 0 0 8px\";\n      case \"circle\":\n        return \"0 8px 8px 0\";\n      default:\n        break;\n    }\n  }};\n  background-color: ${(props) => {\n    switch (props.turn) {\n      case \"cross\":\n        return \"#ed494c\";\n      case \"circle\":\n        return \"#000000\";\n      default:\n        break;\n    }\n  }};\n  text-align: center;\n  line-height: 56px;\n  font-size: 36px;\n  color: white;\n`;\n\nexport default class ScoreBoard extends Component {\n  render() {\n    const { crossCount, circleCount } = this.props;\n    return (\n      <>\n        <div style={{ display: \"flex\", alignItems: \"flex-end\" }}>\n          <BoardRole turn=\"cross\">✖</BoardRole>\n          <BoardSide>{crossCount}</BoardSide>\n          <BoardMiddle>VS</BoardMiddle>\n          <BoardSide>{circleCount}</BoardSide>\n          <BoardRole turn=\"circle\">◯</BoardRole>\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nconst Box = styled.div`\n  width: 540px;\n  height: 540px;\n  font-size: 154px;\n  font-style: italic;\n  text-align: center;\n  color: #ff6d70;\n  line-height: 540px;\n  font-family: \"Roboto Condensed\";\n  -webkit-text-stroke: 4px white;\n`;\n\nexport default class Result extends Component {\n  render() {\n    let winner;\n    switch (this.props.winner) {\n      case \"◯\":\n        winner = <Box>WINNER!</Box>;\n        break;\n      case \"✖\":\n        winner = <Box>WINNER!</Box>;\n        break;\n      default:\n        winner = <Box>DRAW!</Box>;\n        break;\n    }\n    return <>{winner}</>;\n  }\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Reset } from \"styled-reset\";\nimport Pregame from \"./components/Pregame\";\nimport Gaming from \"./components/Gaming\";\nimport ScoreBoard from \"./components/ScoreBoard\";\nimport Result from \"./components/Result\";\nconst Container = styled.div`\n  display: flex;\n  margin: 0 auto;\n  min-height: 100vh;\n  min-width: 100vw;\n  align-items: center;\n  flex-direction: column;\n  background-color: ${(props) => (props.gaming ? \"#FF6D70\" : \"#000000\")};\n  justify-content: space-evenly;\n`;\nconst Button = styled.button`\n  width: 540px;\n  height: 89px;\n  outline: none;\n  color: ${(props) => (props.gaming ? \"#ffffff\" : \"#ff6d70\")};\n  cursor: pointer;\n  font-size: 48px;\n  line-height: 89px;\n  font-weight: bold;\n  text-align: center;\n  border-radius: 8px;\n  font-family: \"consolas\";\n  border: ${(props) =>\n    props.gaming ? \"1px solid #ED494C\" : \"1px solid #ffffff\"};\n  background-color: ${(props) => (props.gaming ? \"#ED494C\" : \"#ffffff\")};\n`;\n\nconst theResultOfWin = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\nconst resetGame = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isGaming: false,\n      turn: true,\n      gameState: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n      crossCount: 0,\n      circleCount: 0,\n      winner: \"\",\n      steps: 0,\n    };\n    this.handleState = this.handleState.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.resultChecker = this.resultChecker.bind(this);\n  }\n  handleState() {\n    this.setState((prevState) => ({\n      isGaming: !prevState.isGaming,\n      gameState: resetGame,\n      winner: \"\",\n      steps: 0,\n    }));\n  }\n  handleClick(index) {\n    const newGameState = Object.assign([], this.state.gameState);\n    if (newGameState[index] === \"\") {\n      if (this.state.turn) {\n        newGameState[index] = \"◯\";\n      } else {\n        newGameState[index] = \"✖\";\n      }\n      this.setState(\n        (prevState) => ({\n          gameState: newGameState,\n          turn: !prevState.turn,\n          steps: prevState.steps + 1,\n        }),\n        () => {\n          const winner = this.resultChecker();\n          if (winner === \"◯\") {\n            this.setState((prevState) => ({\n              winner: winner,\n              circleCount: prevState.circleCount + 1,\n              gameState: resetGame,\n            }));\n          } else if (winner === \"✖\") {\n            this.setState((prevState) => ({\n              winner: winner,\n              crossCount: prevState.crossCount + 1,\n              gameState: resetGame,\n            }));\n          } else if (winner === \"draw\") {\n            this.setState({\n              winner: winner,\n              gameState: resetGame,\n            });\n          }\n        }\n      );\n    }\n  }\n  resultChecker() {\n    const { gameState, steps } = this.state;\n    let winner;\n    theResultOfWin.forEach((result) => {\n      const [i, j, k] = result;\n      if (steps < 9) {\n        if (gameState[i] === gameState[j] && gameState[j] === gameState[k]) {\n          if (\n            gameState[i] !== \"\" &&\n            gameState[j] !== \"\" &&\n            gameState[k] !== \"\"\n          ) {\n            winner = gameState[i];\n          }\n        }\n      } else {\n        winner = \"draw\";\n      }\n    });\n    return winner;\n  }\n  render() {\n    const { isGaming, gameState, crossCount, circleCount, winner } = this.state;\n    return (\n      <>\n        <Reset />\n        {isGaming ? (\n          <Container gaming>\n            <ScoreBoard crossCount={crossCount} circleCount={circleCount} />\n            {winner !== \"\" ? (\n              <Result winner={winner} />\n            ) : (\n              <Gaming handleClick={this.handleClick} gameState={gameState} />\n            )}\n\n            <Button gaming onClick={this.handleState}>\n              RESTART\n            </Button>\n          </Container>\n        ) : (\n          <Container>\n            <Pregame />\n            <Button onClick={this.handleState}>START</Button>\n          </Container>\n        )}\n      </>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}